package com.glowmart.shop_management.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;

/**
 * Represents a shopping cart entity in the system.
 * <p>
 * This entity is used to store information about a user's shopping cart, including the user it belongs to,
 * the total price of items in the cart, the status of the cart, and timestamps for creation and updates.
 * </p>
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@Entity
public class Cart {

    /**
     * Unique identifier for the cart.
     * <p>
     * This field is automatically generated by the database when a new cart is created.
     * </p>
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long cartId;

    /**
     * The user who owns this cart.
     * <p>
     * This is a many-to-one relationship, meaning a user can have multiple carts, but each cart belongs to one user.
     * The relationship is ignored in JSON serialization to prevent infinite recursion.
     * </p>
     */
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    @JsonIgnore
    private User user;

    /**
     * The total price of all items in the cart.
     * <p>
     * This field is stored as a double precision value in the database with a default value of 0.
     * </p>
     */
    @Column(nullable = false, columnDefinition = "DOUBLE PRECISION DEFAULT 0")
    private double totalPrice;

    /**
     * The status of the cart.
     * <p>
     * This field indicates the current state of the cart, such as "PENDING", "CHECKOUT", "ORDERED", "CANCELLED", or "EXPIRED".
     * </p>
     */
    @Column(nullable = true)
    private String status;

    /**
     * Timestamp for when the cart was created.
     * <p>
     * This field is automatically set when the cart is created and cannot be updated.
     * </p>
     */
    @CreationTimestamp
    @Column(nullable = false, updatable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
    private LocalDateTime createdAt;

    /**
     * Timestamp for when the cart was last updated.
     * <p>
     * This field is optional and is set when the cart entity is updated.
     * </p>
     */
    @Column(nullable = true, columnDefinition = "TIMESTAMP DEFAULT NULL")
    private LocalDateTime updatedAt;
}
